#!/usr/bin/env ruby

lib = File.expand_path('../../lib', __FILE__)
$LOAD_PATH.unshift(lib) unless $LOAD_PATH.include?(lib)
require 'git/semaphore'

require 'slop'

options = Slop.parse(help: true) do |o|

  o.banner = <<~"BANNER"
    Usage: git-semaphore [options]

      v#{Git::Semaphore::VERSION}

    Options:
  BANNER

  o.on '--version', 'Print the version' do
    puts Git::Semaphore::LONG_VERSION
    exit(0)
  end

  o.on '--help', 'Print help message' do
    puts o
    exit(0)
  end

  o.on '--settings', 'Display most relevant settings'
  o.on '--internals', 'Display all internal settings'

  o.on '--browse', 'Open the project on https://semaphoreci.com/'

  o.on '--clean', 'Deletes the cached API query results'

  o.on '--projects', 'List all projects and their current status'
  o.on '--branches', 'List all branches for the current project'
  o.on '--status', 'List the build status for the current branch'
  o.on '--history', 'List the build history for the current branch'
  o.on '--information', 'List the commit information for the last build'
  o.on '--log', 'List the build log for the last build'
  o.on '--rebuild', 'Rebuild last revision for the current branch'

end

if options.clean?
  Git::Semaphore.empty_cache_dir
  exit 0
end

if options.projects?
  puts Git::Semaphore::Project.all.to_json
  exit 0
end

project = if (git_repo = Git::Semaphore.git_repo)
            Git::Semaphore::Project.from_repo(git_repo)
          else
            Git::Semaphore::Project.from_config(ENV)
          end

if options.settings?
  puts project.settings.to_json
  exit 0
end

if options.internals?
  puts project.internals.to_json
  exit 0
end

if options.browse?
  `open #{project.branch_url}`
  exit 0
end

if options.branches?
  puts project.branches.to_json
  exit 0
end

if options.status?
  puts project.status.to_json
  exit 0
end

if options.history?
  puts project.history.to_json
  exit 0
end

if options.information?
  puts project.information.to_json
  exit 0
end

if options.log?
  puts project.log.to_json
  exit 0
end

if options.rebuild?
  puts project.rebuild
  exit 0
end

puts options

# That's all Folks!
