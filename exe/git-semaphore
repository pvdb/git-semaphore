#!/usr/bin/env ruby

lib = File.expand_path('../../lib', __FILE__)
$LOAD_PATH.unshift(lib) unless $LOAD_PATH.include?(lib)
require 'git/semaphore'

require 'slop'

options = Slop.parse(help: true) do |o|

  o.banner = <<~"BANNER"
    Usage: git-semaphore [options]

      v#{Git::Semaphore::VERSION}

    Options:
  BANNER

  o.on '--version', 'Print the version' do
    puts Git::Semaphore::LONG_VERSION
    exit(0)
  end

  o.on '--help', 'Print help message' do
    puts o
    exit(0)
  end

  o.on '--clean',       'Deletes the cached API query results'
  o.on '--projects',    'List all projects and their current status'

  o.on '--browse',      'Open the project on https://semaphoreci.com/'

  o.on '--settings',    'Display most relevant settings'
  o.on '--internals',   'Display all internal settings'

  o.on '--branches',    'List all branches for the current project'
  o.on '--status',      'List the build status for the current branch'
  o.on '--history',     'List the build history for the current branch'
  o.on '--information', 'List the commit information for the last build'
  o.on '--log',         'List the build log for the last build'
  o.on '--rebuild',     'Rebuild last revision for the current branch'

end

project = if (git_repo = Git::Semaphore.git_repo)
            Git::Semaphore::Project.from_repo(git_repo)
          else
            Git::Semaphore::Project.from_config(ENV)
          end

case
when options.clean?       then Git::Semaphore.empty_cache_dir
when options.projects?    then puts Git::Semaphore::Project.all.to_json

when options.browse?      then `open #{project.branch_url}`

when options.settings?    then puts project.settings.to_json
when options.internals?   then puts project.internals.to_json

when options.branches?    then puts project.branches.to_json
when options.status?      then puts project.status.to_json
when options.history?     then puts project.history.to_json
when options.information? then puts project.information.to_json
when options.log?         then puts project.log.to_json
when options.rebuild?     then project.rebuild
else
  puts options
end

# That's all Folks!
